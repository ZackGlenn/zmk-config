/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <200>;
};

&lt {
    flavor = "balanced";
    quick-tap-ms = <200>;
};

/ {
    behaviors {
        // td0: tap_dance_0 {
        //     compatible = "zmk,behavior-tap-dance";
        //     label = "TAP_DANCE_0";
        //     #binding-cells = <0>;
        //     tapping-term-ms = <200>;
        //     bindings = <&lt 1 SPACE>, <&kp ESC>;
        // };
        
        // spesc: space_escape {
        //     compatible = "zmk,behavior-mod-morph";
        //     label = "SPACE_ESCAPE";
        //     #binding-cells = <0>;
        //     bindings = <&lt 1 SPACE>, <&kp ESC>;
        //     mods = <(MOD_LSFT|MOD_RSFT)>;
        // }; 

    };
    
    macros {
        tab_tab: tab_tab {
            compatible = "zmk,behavior-macro";
            label = "TAB_TAB";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <0>;
            bindings = <&macro_release &kp LCTL>,
                <&macro_tap &kp TAB>,
                <&macro_press &kp LCTL>,
                <&macro_pause_for_release>;
        };
        
        spesc: spesc {
            compatible = "zmk,behavior-mod-morph";
            label = "SPACE_TAB";
            #binding-cells = <0>;
            bindings = <&lt 1 SPACE>, <&tab_tab>;
            mods = <(MOD_LCTL)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
                   &kp Q           &kp W             &kp E               &kp R            &kp T    &kp Y        &kp U              &kp I            &kp O                     &kp P
         &mt LEFT_META A  &mt LEFT_ALT S  &mt LEFT_SHIFT D  &mt LEFT_CONTROL F            &kp G    &kp H  &mt RCTRL J  &mt RIGHT_SHIFT K  &mt RIGHT_ALT L  &mt RIGHT_META SEMICOLON
                   &kp Z           &kp X             &kp C               &kp V            &kp B    &kp N        &kp M          &kp COMMA          &kp DOT                  &kp FSLH
                                                                     &lt 2 ESC  &lt 1 BACKSPACE    &spab  &lt 2 ENTER
            >;
        };

        layer_symbol {
            bindings = <
                       &kp N1             &kp N2                           &kp N3                       &kp N4            &kp N5         &kp N6            &kp N7             &kp N8               &kp N9              &kp N0
         &mt LEFT_META DOLLAR  &mt LEFT_ALT PLUS  &mt LEFT_SHIFT LEFT_PARENTHESIS  &mt LCTRL RIGHT_PARENTHESIS  &kp SINGLE_QUOTE    &kp PERCENT   &mt RCTRL MINUS    &mt RSHFT EQUAL  &mt RALT UNDERSCORE  &mt RMETA ASTERISK
                     &kp EXCL          &kp POUND                   &kp LEFT_BRACE              &kp RIGHT_BRACE         &kp GRAVE  &kp AMPERSAND  &kp LEFT_BRACKET  &kp RIGHT_BRACKET        &kp BACKSLASH           &kp CARET
                                                                                                        &trans            &trans         &trans            &trans
            >;
        };

        layer_navigation {
            bindings = <
             &bt BT_PRV  &bt BT_NXT  &bt BT_CLR  &bt BT_SEL 1  &out OUT_TOG  &kp K_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_BRI_DN  &kp C_BRI_UP
            &bootloader  &kp K_LOCK    &kp HOME       &kp END     &kp K_WWW    &kp LEFT      &kp DOWN        &kp UP     &kp RIGHT        &reset
                 &kp F1      &kp F2      &kp F3        &kp F4        &kp F5      &kp F6        &kp F7        &kp F8        &kp F9       &kp F10
                                                       &trans        &trans    &kp C_PP        &tog 3
            >;
        };

        layer_gaming{
            bindings = <
                  &kp ESC   &kp Q   &kp W   &kp E      &kp R   &kp T   &kp Y   &kp U   &kp I          &kp O
           &kp LEFT_SHIFT   &kp A   &kp S   &kp D      &kp F   &kp G   &kp H   &kp J   &kp K          &kp L
         &kp LEFT_CONTROL   &kp Z   &kp X   &kp C      &kp V   &kp B   &kp N   &kp M   &kp P  &kp RIGHT_ALT
                                           &trans  &kp SPACE  &trans  &tog 3
            >;
        };

    };
};